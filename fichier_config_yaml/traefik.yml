apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-user
  namespace: kube-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik-ingress-clusterRole
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik-ingress-ClusterRoleBinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress-clusterRole
subjects:
- kind: ServiceAccount
  name: traefik-ingress-user
  namespace: kube-system
---
apiVersion: v1
kind: ConfigMap
metadata:
 name: traefik-conf
 namespace: kube-system
data:
 traefik.toml: |-
   defaultEntryPoints = ["http","https"]
   [web]
   address = ":8080"
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: traefik-ingress-deploiement
  namespace: kube-system
  labels:
    k8s-app: traefik-ingress-lb
spec:
  selector:
    matchLabels:
      k8s-app: traefik-ingress-lb
  template:
    metadata:
      labels:
        k8s-app: traefik-ingress-lb
        name: traefik-ingress-lb
    spec:
      serviceAccountName: traefik-ingress-user
      terminationGracePeriodSeconds: 60
      containers:
      - image: traefik
        name: traefik-ingress-lb
        volumeMounts:
        - mountPath: "/config"
           name: "config"
        resources:
         requests:
          cpu: 100m
          memory: 20Mi
      args:
      - --api
      - --logLevel=INFO
      - --kubernetes
      - --configfile=/config/traefik.toml
      volumes:
      - name: config
       configMap:
        name: traefik-conf
       ports:
       - name: http
         containerPort: 80
       - name: admin
         containerPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: traefik-ingress-service
  namespace: kube-system
spec:
  selector:
    k8s-app: traefik-ingress-lb
  ports:
    - protocol: TCP
      port: 80
      name: web
    - protocol: TCP
      port: 8080
      name: admin
  type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: traefik-ingress
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: traefik.mon.dom
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: traefik-ingress-service
            port:
              number: 8080
  - host: w1.mon.dom
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: w1
            port:
              number: 80
  - host: w2.mon.dom
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: w2
            port:
              number: 80
